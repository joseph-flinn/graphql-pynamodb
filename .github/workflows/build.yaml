name: Build & Release

on:
  push:

jobs:
  build-n-release:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

      - uses: actions/setup-python@dc73133d4da04e56a135ae2246682783cc7c7cb6
        with:
          python-version: 3.7

      # Did some research and it looks like running the included test suite `python setup.py test`
      # will need a dynamo-local container hosted as a service in this workflow.
      - name: Testing Stub
        run: |
          echo "Stub for future automated testing"

      - name: Get version
        id: get-version
        run: |
          version=$(grep version setup.py | grep -o "[0-9].[0-9].[0-9]")
          echo "version: $version"
          echo "::set-output name=version::$version"

      - name: Install pypa/build
        run: python -m pip install build --user

      - name: Build binary wheel and source tarball
        run: python -m build --sdist --wheel --outdir dist

      - name: "Upload Build Asset: tar"
        uses: actions/upload-artifact@ee69f02b3dfdecd58bb31b4d133da38ba6fe3700
        with:
          name: graphene-pynamodb-${{ steps.get-version.outputs.version }}.tar.gz
          path: ./dist/graphene-pynamodb-${{ steps.get-version.outputs.version }}.tar.gz

      - name: "Upload Build Asset: wheel"
        uses: actions/upload-artifact@ee69f02b3dfdecd58bb31b4d133da38ba6fe3700
        with:
          name: graphene_pynamodb-${{ steps.get-version.outputs.version }}-py3-none-any.whl
          path: ./dist/graphene_pynamodb-${{ steps.get-version.outputs.version }}-py3-none-any.whl

      - name: setup version cache
        run: |
          # Sets up the initial run on version 2.3.1
          echo "2.3.1" > version.txt

      - name: Get cached version
        uses: actions/cache@1a9e2138d905efd099035b49d8b7a3888c653ca8
        with:
          path: ./version.txt
          key: cached-version

      - name: Check for version bump
        id: version-bump-check
        run: |
          is_bump="false"
          old_version=$(cat version.txt)

          if [[ "$VERSION" != "$old_version" ]]; then
            is_bump="true"
            echo $VERSION > version.txt
          fi

          # Testing code
          echo "old_version: $old_version"
          echo "version: $VERSION"
          echo "is_bump: $is_bump"

          echo "::set-output name=is_bump::$is_bump"
        env:
          VERSION: ${{ steps.get-version.outputs.version }}

      - name: Create release
        if: steps.version-bump-check.outputs.is_bump == 'true'
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.get-version.outputs.version }}"
          release_name: "Version ${{ steps.get-version.outputs.version }}"
          draft: true
          prerelease: false

      - name: Upload release assets
        if: steps.version-bump-check.outputs.is_bump == 'true'
        run: |
          hub release edit \
            -a ./dist/graphene-pynamodb-$VERSION.tar.gz \
            -a ./dist/graphene_pynamodb-${{ steps.get-version.outputs.version }}-py3-none-any.whl \
            -m "Version $VERSION" v$VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.get-version.outputs.version }}
